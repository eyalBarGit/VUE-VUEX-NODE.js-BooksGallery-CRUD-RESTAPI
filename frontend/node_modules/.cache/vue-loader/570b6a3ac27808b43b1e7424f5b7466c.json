{"remainingRequest":"F:\\Dev\\Coding Academy ex\\Day107-VueWorkshop\\miss-book\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Dev\\Coding Academy ex\\Day107-VueWorkshop\\miss-book\\src\\views\\bookDetails.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"F:\\Dev\\Coding Academy ex\\Day107-VueWorkshop\\miss-book\\src\\views\\bookDetails.vue","mtime":1593116875729},{"path":"F:\\Dev\\Coding Academy ex\\Day107-VueWorkshop\\miss-book\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Dev\\Coding Academy ex\\Day107-VueWorkshop\\miss-book\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\Dev\\Coding Academy ex\\Day107-VueWorkshop\\miss-book\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\Dev\\Coding Academy ex\\Day107-VueWorkshop\\miss-book\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Dev\\Coding Academy ex\\Day107-VueWorkshop\\miss-book\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"F:\\Dev\\Coding Academy ex\\Day107-VueWorkshop\\miss-book\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Dev\\Coding Academy ex\\Day107-VueWorkshop\\miss-book\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouYm9sZCB7DQogIGZvbnQtd2VpZ2h0OiA3MDA7DQp9DQoucmV2aWV3cy1jb250YWluZXIgew0KICB3aWR0aDogNTAwcHg7DQogIC5hZGQtcmV2aWV3LWNvbnRhaW5lciB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgbWFyZ2luLWJvdHRvbTogMjBweDsNCiAgfQ0KfQ0KDQoucmV2aWV3LWNhcmQgew0KICBtYXJnaW46IDE1cHggMDsNCiAgd2lkdGg6IDUwMHB4Ow0KICBwYWRkaW5nOiAyMHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7DQogIC5uYW1lLWRhdGUgew0KICAgIHdpZHRoOiA0MDBweDsNCiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiKDI1NSwgMjU1LCAyNTUpOw0KICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7DQogIH0NCn0NCi5ncmVlbkNvbG9yIHsNCiAgY29sb3I6IGdyZWVuOw0KfQ0KLnJlZENvbG9yIHsNCiAgY29sb3I6IHJlZDsNCn0NCg=="},{"version":3,"sources":["bookDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bookDetails.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <p v-if=\"!book\">loading...</p>\r\n  <div v-else class=\"bookDetails d-flex flex-column align-center justify-space-around\">\r\n    <v-card class=\"mx-auto my-12\" max-width=\"800\" width=\"100%\">\r\n      <v-img height=\"300\" :src=\"book.thumbnail\">\r\n        <v-chip v-if=\"book.listPrice.isOnSale\" class=\"ma-4\" color=\"red\" text-color=\"white\">\r\n          <v-avatar left>\r\n            <v-icon>mdi-sale</v-icon>\r\n          </v-avatar>\r\n          <span class=\"font-weight-bold subtitle-1\">On Sale!</span>\r\n        </v-chip>\r\n      </v-img>\r\n      <v-card-title>\r\n        {{ book.title.toUpperCase() }}\r\n        <v-spacer></v-spacer>\r\n        <div v-if=\"checkNan()\">{{ bookAge }}</div>\r\n      </v-card-title>\r\n      <v-card-subtitle v-if=\"book.authors\">\r\n        <span class=\"font-weight-bold\">Authors:</span>\r\n        {{ book.authors.join(\" \") }}\r\n        <div v-if=\"book.categories\">\r\n          <span class=\"font-weight-bold\">Categories:</span>\r\n          {{ book.categories.join(\" \") }}\r\n        </div>\r\n      </v-card-subtitle>\r\n      <v-card-text v-if=\"book.description\">\r\n        <span class=\"font-weight-bold\">Description:</span>\r\n        <long-text :txt=\"book.description\"></long-text>\r\n        <div>\r\n          <span class=\"font-weight-bold\">Language:</span>\r\n          {{ book.language }}\r\n        </div>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <span>{{ readStatus }}</span>\r\n        <v-spacer></v-spacer>\r\n        <span class=\"font-weight-bold\">Price:</span>\r\n        <span\r\n          class=\"font-weight-bold\"\r\n          :class=\"{\r\n            redColor: book.listPrice.amount > 150,\r\n            greenColor: book.listPrice.amount < 20,\r\n          }\"\r\n        >{{ book.listPrice.amount }}</span>\r\n      </v-card-actions>\r\n    </v-card>\r\n    <div class=\"reviews-container\">\r\n      <div class=\"add-review-container d-flex justify-center\">\r\n        <div>\r\n          <v-btn @click=\"showReview = !showReview\">Add-Review</v-btn>\r\n        </div>\r\n        <addReview @addReview=\"addReview\" v-if=\"showReview\"></addReview>\r\n      </div>\r\n      <div v-if=\"reviews\">\r\n        <div\r\n          class=\"review-card d-flex justify-space-between\"\r\n          :key=\"idx\"\r\n          v-for=\"(review, idx) in reviews\"\r\n        >\r\n          <div class=\"d-flex flex-column\">\r\n            <div class=\"name-date d-flex justify-space-between\">\r\n              <div class=\"d-flex\">\r\n                <p class=\"bold\">name:</p>\r\n                <p>{{ review.name }}</p>\r\n              </div>\r\n              <div class=\"d-flex\">\r\n                <p class=\"bold\">date:</p>\r\n                <p>{{ review.date }}</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex\">\r\n              <p class=\"bold\">review:</p>\r\n              <p>{{ review.txt }}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"div\">\r\n            <v-btn @click=\"removeReview(review)\">X</v-btn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <router-link to=\"/book/{getNextBookId}\">\r\n      <v-btn @click=\"nextBookPage\">Next-Book</v-btn>\r\n    </router-link>\r\n  </div>\r\n</template>\r\n<script>\r\nimport longText from \"../components/longText\";\r\nimport addReview from \"../components/addReview\";\r\nimport bookService from \"../services/bookService.js\";\r\nexport default {\r\n  name: \"bookDetails\",\r\n  data() {\r\n    return {\r\n      book: null,\r\n      showReview: false,\r\n      reviews: [],\r\n      nextBook: false\r\n    };\r\n  },\r\n  components: {\r\n    longText,\r\n    addReview\r\n  },\r\n  methods: {\r\n    addReview(review) {\r\n      this.setNotificationActive();\r\n      const bookId = this.$route.params.id;\r\n      bookService.addReview(bookId, review);\r\n      this.showReview = false;\r\n      this.reviews.push(review);\r\n      console.log(\"added review: \", this.reviews);\r\n    },\r\n    removeReview(review) {\r\n      this.setNotificationActive();\r\n      const bookId = this.$route.params.id;\r\n      bookService.removeReview(bookId, review);\r\n      // this.reviews.pop();\r\n      \r\n      console.log(\"this.reviews: \", this.reviews);\r\n    },\r\n    setNotificationActive() {\r\n      this.$store.dispatch(\"updateSnackBarStatus\", true);\r\n    },\r\n    getCurrReviews() {\r\n      this.book.reviews ? (this.reviews = this.book.reviews) : [];\r\n    },\r\n    checkNan() {\r\n      return isNaN(this.book.publishedDate) ? false : true;\r\n    },\r\n\r\n    nextBookPage() {\r\n      // this.$router.push({\r\n      //   name: \"bookDetails\",\r\n      //   parmas: {\r\n      //     id: this.getNextBookId()\r\n      //   }\r\n      // });\r\n\r\n      this.$store.dispatch(\"updateCurrBook\", this.book);\r\n      this.$store.dispatch(\"updateNextBook\");\r\n    }\r\n  },\r\n  computed: {\r\n    readStatus() {\r\n      let pageCount = this.book.pageCount;\r\n      if (pageCount > 500) {\r\n        return \"Long reading\";\r\n      }\r\n      if (pageCount > 200) {\r\n        return \"Decent Reading\";\r\n      }\r\n      if (pageCount < 100) {\r\n        return \"Light Reading\";\r\n      }\r\n      return \"Medium Reading\";\r\n    },\r\n    bookAge() {\r\n      let bookAge = this.book.publishedDate;\r\n      let currYear = new Date().getFullYear();\r\n      let yearsDifference = currYear - bookAge;\r\n      if (yearsDifference > 10) return \"Veteran\";\r\n      if (yearsDifference < 1) return \"New\";\r\n      return yearsDifference + \" years ago\";\r\n    }\r\n  },\r\n  mounted() {},\r\n  created() {\r\n    let bookId = this.$route.params.id;\r\n    bookService.getById(bookId).then(book => {\r\n      this.book = book;\r\n      this.getCurrReviews();\r\n    });\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n.bold {\r\n  font-weight: 700;\r\n}\r\n.reviews-container {\r\n  width: 500px;\r\n  .add-review-container {\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n.review-card {\r\n  margin: 15px 0;\r\n  width: 500px;\r\n  padding: 20px;\r\n  background-color: lightgray;\r\n  .name-date {\r\n    width: 400px;\r\n    border-bottom: 1px solid rgb(255, 255, 255);\r\n    padding-right: 20px;\r\n  }\r\n}\r\n.greenColor {\r\n  color: green;\r\n}\r\n.redColor {\r\n  color: red;\r\n}\r\n</style>\r\n"]}]}